//******************************************************************************
// <copyright file="license.md" company="Wlog project  (https://github.com/arduosoft/wlog)">
// Copyright (c) 2016 Wlog project  (https://github.com/arduosoft/wlog)
// Wlog project is released under LGPL terms, see license.md file.
// </copyright>
// <author>Daniele Fontani, Emanuele Bucaelli</author>
// <autogenerated>true</autogenerated>
//******************************************************************************
using AutoMapper;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Mvc;
using Wlog.BLL.Entities;
using Wlog.Library.BLL.Reporitories;
using Wlog.Web.Resources;

namespace Wlog.Web.Models.User
{
    /// <summary>
    /// Model used for saving a NEW user
    /// </summary>
    public class NewUser
    {
        [Required]
        [Display(ResourceType = typeof(Labels), Name = "UserName")]
        public string UserName { get; set; }

        [Required(ErrorMessageResourceType = typeof(Labels), ErrorMessageResourceName = "EmailRequired")]
        [DataType(DataType.EmailAddress)]
        public string Email { get; set; }

        [Required]
        [StringLength(100, MinimumLength = 6, ErrorMessageResourceType = typeof(Labels), ErrorMessageResourceName = "MinLength")]
        [DataType(DataType.Password)]
        [Display(ResourceType = typeof(Labels), Name = "Password")]
        public string Password { get; set; }

        [DataType(DataType.Password)]
        [Display(ResourceType = typeof(Labels), Name = "ConfirmPassword")]
        [System.ComponentModel.DataAnnotations.Compare("Password",  ErrorMessageResourceType = typeof(Labels), ErrorMessageResourceName = "NoMatchPassword")]
        public string ConfirmPassword { get; set; }

        [Display(Name = "IsAdmin")]
        public bool IsAdmin { get; set; }

        public IEnumerable<SelectListItem> Profiles { get; set; }

        [Display(ResourceType = typeof(Labels), Name = "UserProfile")]
        public Guid Profile { get; set; }

        public NewUser()
        {
            this.IsAdmin = false;
            List<ProfilesEntity> profiles = RepositoryContext.Current.Profiles.GetAllProfiles();
            Profiles = Mapper.Map<List<SelectListItem>>(profiles);
        }
    }
}