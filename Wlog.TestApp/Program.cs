//******************************************************************************
// <copyright file="license.md" company="Wlog project  (https://github.com/arduosoft/wlog)">
// Copyright (c) 2016 Wlog project  (https://github.com/arduosoft/wlog)
// Wlog project is released under LGPL terms, see license.md file.
// </copyright>
// <author>Daniele Fontani, Emanuele Bucaelli</author>
// <autogenerated>true</autogenerated>
//******************************************************************************
using Newtonsoft.Json;
using NLog;
using System;
using Wlog.Clients.Classes;
using Wlog.Clients.Helpers;
using Wlog.TestApp.Test;

namespace Wlog.TestApp
{
    class Program
    {
        static Logger logger = LogManager.GetCurrentClassLogger();
        static void Main(string[] args)
        {
            try
            {

                Console.WriteLine("Making a single call to service to check availability...");
                //Manual call to log service to test plain performance
                DateTime d1 = DateTime.Now;
                LogHelper.DoRequest("Http://localhost:55044/api/log", JsonConvert.SerializeObject(new LogMessage()
                {
                    Message = "TEST MANUAL MESSAGE" + DateTime.Now,
                    SourceDate = DateTime.Now,
                    Level = "Error",
                    ApplicationKey = "{FF99EE02-1E88-44FF-B0A4-8DF8D2F3B742}"

                }));

                double ms = DateTime.Now.Subtract(d1).TotalMilliseconds;
                Console.WriteLine("Service call done in ms:" + ms);

                TestIterator it = new TestIterator();
                it.Instances.Add(new WlogTest());
                it.Instances.Add(new WLogBulkTest());
                it.Instances.Add(new FileTest());

                int[] iterationSize = new int[] { 1, 10, 100, 1000, 10000 };
                Console.WriteLine(
                    string.Concat(
                        "#".PadRight(10, ' '),
                        "Wlog".PadRight(15, ' '),
                        "Wlog (bulk)".PadRight(15, ' '),
                        "File".PadRight(15, ' ')
                        ));
                for (int i = 0; i < iterationSize.Length; i++)
                {
                    it.RepeatCount = iterationSize[i];
                    //Console.WriteLine("=> Starting benchmark with iterationSize " + it.RepeatCount);

                    it.DoTest();

                    Console.WriteLine("{0}{1}{2}{3}", 
                        it.RepeatCount.ToString().PadRight(10,' '), 
                        it.Instances[0].Avg.ToString().PadRight(15,' '), 
                        it.Instances[1].Avg.ToString().PadRight(15, ' '),
                        it.Instances[2].Avg.ToString().PadRight(15, ' '));
                }
            }
            catch (Exception er)
            {
                Console.WriteLine(er.StackTrace);
            }


            Console.ReadKey();
        }
    }
}
