//******************************************************************************
// <copyright file="license.md" company="Wlog project  (https://github.com/arduosoft/wlog)">
// Copyright (c) 2016 Wlog project  (https://github.com/arduosoft/wlog)
// Wlog project is released under LGPL terms, see license.md file.
// </copyright>
// <author>Daniele Fontani, Emanuele Bucaelli</author>
// <autogenerated>true</autogenerated>
//******************************************************************************
using Newtonsoft.Json;
using NLog;
using System;
using Wlog.Clients.Classes;
using Wlog.Clients.Helpers;
using Wlog.TestApp.Test;
using System.IO;

namespace Wlog.TestApp
{
    class Program
    {
        static Logger logger = LogManager.GetCurrentClassLogger();
        static void Main(string[] args)
        {
            try
            {

                Console.WriteLine("Making a single call to service to check availability...");
                //Manual call to log service to test plain performance
                DateTime d1 = DateTime.Now;
                LogHelper.DoRequest("Http://localhost:55044/api/log", JsonConvert.SerializeObject(new  LogMessage[]{ new LogMessage()
                {
                    Message = "TEST MANUAL MESSAGE" + DateTime.Now,
                    SourceDate = DateTime.Now,
                    Level = "Error",
                    ApplicationKey = "{8C075ED0-45A7-495A-8E09-3A98FD6E8248}"

                }}));

                double ms = DateTime.Now.Subtract(d1).TotalMilliseconds;
                Console.WriteLine("Service call done in ms:" + ms);

                TestIterator it = new TestIterator();
                it.Instances.Add(new WlogTest());
                it.Instances.Add(new WLogBulkTest());
                it.Instances.Add(new FileTest());

                int[] iterationSize = new int[] { 1, 10, 100, 1000, 10000 };
                Console.WriteLine(
                    string.Concat(
                        "#".PadRight(10, ' '),
                        "Wlog".PadRight(15, ' '),
                        "Wlog (bulk)".PadRight(15, ' '),
                        "File".PadRight(15, ' ')
                        ));
                for (int i = 0; i < iterationSize.Length; i++)
                {
                    it.RepeatCount = iterationSize[i];
                    //Console.WriteLine("=> Starting benchmark with iterationSize " + it.RepeatCount);

                    it.DoTest();

                    Console.WriteLine("{0}{1}{2}{3}", 
                        it.RepeatCount.ToString().PadRight(10,' '), 
                        it.Instances[0].Avg.ToString().PadRight(15,' '), 
                        it.Instances[1].Avg.ToString().PadRight(15, ' '),
                        it.Instances[2].Avg.ToString().PadRight(15, ' '));
                }
            }
            catch (Exception er)
            {
                Console.WriteLine(er.StackTrace);
            }





            //string[] lines = File.ReadAllLines(".\\input.txt");

            //for (int k = 0; k < 30; k++)

            //{ 

          
            //    //Console.WriteLine("=> Starting benchmark with iterationSize " + it.RepeatCount);
            //    NLog.WebLog.WebTarget.LogMessage[] logs = new NLog.WebLog.WebTarget.LogMessage[1000];

              
            //    for (int i = 0; i < lines.Length; i++)
            //    {

            //        Console.WriteLine("{0};{1};{2};{3}", it.RepeatCount, it.Instances[0].Avg, it.Instances[1].Avg, it.Instances[2].Avg);




            //        logs[i % 1000] = new NLog.WebLog.WebTarget.LogMessage()
            //        {
            //            Message = lines[i],
            //            SourceDate = DateTime.Now.AddDays(-2).AddSeconds(i * 10),
            //            Level = "Error",
            //            ApplicationKey = "{8C075ED0-45A7-495A-8E09-3A98FD6E8248}"

            //        };

            //        if (i == 1000)
            //        {
            //            WebTarget.DoRequest("Http://localhost:55044/api/log", JsonConvert.SerializeObject(logs));
            //            logs = new NLog.WebLog.WebTarget.LogMessage[1000];
            //        }


            //    }

            //    WebTarget.DoRequest("Http://localhost:55044/api/log", JsonConvert.SerializeObject(logs));


            //    Console.WriteLine("Waiting.." + k);
            //    Thread.Sleep(30000);
            //}

            Console.ReadKey();
        }
    }
}
