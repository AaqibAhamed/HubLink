//******************************************************************************
// <copyright file="license.md" company="Wlog project  (https://github.com/arduosoft/wlog)">
// Copyright (c) 2016 Wlog project  (https://github.com/arduosoft/wlog)
// Wlog project is released under LGPL terms, see license.md file.
// </copyright>
// <author>Daniele Fontani, Emanuele Bucaelli</author>
// <autogenerated>true</autogenerated>
//******************************************************************************
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using NLog;

namespace Wlog.Library.BLL.Reporitories
{

    //TODO: sould this use "using" patter to allow transaction maangment? (one UOW shared on all repo instances...)
    //TODO:should this use DI to inject repo?
    //TODO: should this used by using DI?

    /// <summary>
    /// class to manage all repository instance
    /// </summary>
    public class RepositoryContext
    {
      

        private static Logger logger = LogManager.GetCurrentClassLogger();


        //Here a list of all repositories
        public ApplicationRepository Applications { get; private set; }

        public UserRepository Users { get; private set; }

        public LogRepository Logs { get; private set; }

        public RolesRepository Roles { get; private set; }

        public ProfilesRepository Profiles { get; private set; }

        public IndexRepository Index { get; private set; }

        public DeletedLogRepository DeletedLogs { get; private set; }

        public JobDefinitionRepository JobDefinition { get; private set; }

        public JobInstanceRespository JobInstance { get; private set; }

        private static RepositoryContext current;

        public static RepositoryContext Current
        {
            get
            {
                if (current != null && current.Applications != null && current.Users != null
                    && current.Logs != null && current.Roles != null)
                {

                }
                else
                {
                    logger.Debug("[repo] creating repository context");
                    current = new RepositoryContext();
                    current.Applications = new ApplicationRepository();
                    current.Users = new UserRepository();
                    current.Logs = new LogRepository();
                    current.Roles = new RolesRepository();
                    current.Profiles = new ProfilesRepository();
                    current.Index = new IndexRepository();
                    current.JobDefinition = new JobDefinitionRepository();
                    current.DeletedLogs = new DeletedLogRepository();
                    current.JobInstance = new JobInstanceRespository();
                }

                return current;
            }
        }
    }
}
